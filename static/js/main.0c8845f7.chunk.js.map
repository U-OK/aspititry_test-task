{"version":3,"sources":["redux/reducer.js","redux/store.js","redux/actionTypes.js","components/modalForm/modalForm.jsx","components/trainingTable/trainingTable.jsx","redux/actionCreator.js","components/chart/chart.jsx","App.js","index.js"],"names":["initialState","workouts","id","workoutType","distance","date","comment","middleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","state","action","type","payload","filter","item","applyMiddleware","ModalForm","isOpen","handleOk","handleCancel","title","values","Form","useForm","form","useEffect","setFieldsValue","moment","visible","onCancel","onOk","a","validateFields","then","formValues","valueOfDate","format","resetFields","catch","info","console","log","forceRender","labelCol","span","wrapperCol","layout","onFinish","Item","label","name","rules","required","message","Group","Button","value","min","TrainingTable","data","useState","editFormIsOpen","setEditFormIsOpen","addFormIsOpen","setAddFormIsOpen","dispatch","useDispatch","emptyFormData","formData","setFormData","objFromForm","newData","newObj","lodash","find","index","indexOf","splice","length","push","columns","dataIndex","key","filters","text","onFilter","record","render","sorter","b","Date","parse","row","onClick","onConfirm","deleteWorkoutById","style","marginBottom","dataSource","rowKey","pagination","pageSize","onRow","rowIndex","event","Chart","config","height","xField","yField","point","size","shape","fill","App","useSelector","orientation","offset","ReactDOM","store","document","getElementById"],"mappings":"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","file":"static/js/main.0c8845f7.chunk.js","sourcesContent":["import {\r\n  GET_WORKOUT_DATA,\r\n  DELETE_WORKOUT_BY_ID,\r\n  ADD_NEW_WORKOUT,\r\n  EDIT_WORKOUTS\r\n} from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n  workouts: [\r\n    {\r\n      id: 0,\r\n      workoutType: \"bicycling\",\r\n      distance: 3,\r\n      date: \"2020-10-20\",\r\n      comment: \"\",\r\n    },\r\n    {\r\n      id: 1,\r\n      workoutType: \"running\",\r\n      distance: 15,\r\n      date: \"2020-10-21\",\r\n      comment: \"cool\",\r\n    },\r\n    {\r\n      id: 2,\r\n      workoutType: \"walking\",\r\n      distance: 14,\r\n      date: \"2020-10-22\",\r\n      comment: \"\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_WORKOUT_DATA: {\r\n      return {\r\n        ...state,\r\n        workouts: [...action.payload],\r\n      };\r\n    }\r\n    case ADD_NEW_WORKOUT: {\r\n      return {\r\n        ...state,\r\n        workouts: [...state.workouts, action.payload],\r\n      };\r\n    }\r\n    case EDIT_WORKOUTS: {\r\n      return {\r\n        workouts: [...action.payload]\r\n      };\r\n    }\r\n    case DELETE_WORKOUT_BY_ID: {\r\n      return {\r\n        ...state,\r\n        workouts: [\r\n          ...state.workouts.filter((item) => item.id !== action.payload),\r\n        ],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducer from \"./reducer\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default createStore(\r\n  reducer,\r\n  composeEnhancers(applyMiddleware(...middleware))\r\n);","export const GET_WORKOUT_DATA = \"GET_WORKOUT_DATA\";\r\nexport const DELETE_WORKOUT_BY_ID = \"DELETE_WORKOUT_BY_ID\";\r\nexport const ADD_NEW_WORKOUT = \"ADD_NEW_WORKOUT\";\r\nexport const EDIT_WORKOUTS = \"EDIT_WORKOUTS\";","import React, { useEffect } from \"react\";\r\nimport { Modal, Input, DatePicker, InputNumber, Form, Radio } from \"antd\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst ModalForm = ({ isOpen, handleOk, handleCancel, title, values }) => {\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({\r\n      ...values,\r\n      date: values.date && moment(`${values.date}`, \"YYYY-MM-DD\"),\r\n    });\r\n  }, [values]);\r\n\r\n  return (\r\n    <Modal\r\n      title={title || \"Title\"}\r\n      visible={isOpen}\r\n      onCancel={handleCancel}\r\n      onOk={async () => {\r\n        form\r\n          .validateFields()\r\n          .then((formValues) => {\r\n            const valueOfDate = formValues.date.format(\"YYYY-MM-DD\");\r\n\r\n            form.resetFields();\r\n            handleOk({ ...formValues, date: valueOfDate, id: values.id });\r\n          })\r\n          .catch((info) => {\r\n            console.log(\"Validate Failed:\", info);\r\n          });\r\n      }}\r\n      forceRender\r\n    >\r\n      <Form\r\n        form={form}\r\n        labelCol={{ span: 6 }}\r\n        wrapperCol={{ span: 17 }}\r\n        layout=\"horizontal\"\r\n        onFinish={() => handleOk(values)}\r\n        onCancel={handleCancel}\r\n      >\r\n        <Form.Item\r\n          label=\"Workout type\"\r\n          name=\"workoutType\"\r\n          rules={[{ required: true, message: \"Please choose your activity!\" }]}\r\n        >\r\n          <Radio.Group>\r\n            <Radio.Button value=\"bicycling\">Bicycling</Radio.Button>\r\n            <Radio.Button value=\"running\">Running</Radio.Button>\r\n            <Radio.Button value=\"walking\">Walking</Radio.Button>\r\n            <Radio.Button value=\"skiing\">Skiing</Radio.Button>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Distance\"\r\n          name=\"distance\"\r\n          rules={[{ required: true, message: \"Please enter your distance!\" }]}\r\n        >\r\n          <InputNumber min=\"0\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Date\"\r\n          name=\"date\"\r\n          rules={[\r\n            { required: true, message: \"Please choose date your workout!\" },\r\n          ]}\r\n        >\r\n          <DatePicker />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Comment\" name=\"comment\">\r\n          <Input />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalForm;\r\n","import React, { useState } from \"react\";\r\nimport lodash from \"lodash\";\r\n\r\nimport { Table, Button, Popconfirm } from \"antd\";\r\nimport ButtonGroup from \"antd/lib/button/button-group\";\r\n\r\nimport ModalForm from \"../modalForm/modalForm\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  deleteWorkoutById,\r\n  addNewWorkout,\r\n  editWorkouts,\r\n} from \"../../redux/actionCreator\";\r\n\r\nconst TrainingTable = ({ data }) => {\r\n  const [editFormIsOpen, setEditFormIsOpen] = useState(false);\r\n  const [addFormIsOpen, setAddFormIsOpen] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const emptyFormData = {\r\n    id: \"\",\r\n    workoutType: \"\",\r\n    distance: \"\",\r\n    date: \"\",\r\n    comment: \"\",\r\n  };\r\n\r\n  const [formData, setFormData] = useState(emptyFormData);\r\n\r\n  const handleAdd = () => {\r\n    setAddFormIsOpen(true);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    dispatch(deleteWorkoutById(id));\r\n  };\r\n\r\n  const handleOk = (objFromForm) => {\r\n    const newData = [...data];\r\n    const newObj = { ...objFromForm };\r\n\r\n    const match = lodash.find(newData, { id: newObj.id });\r\n    if (match) {\r\n      const index = lodash.indexOf(\r\n        newData,\r\n        lodash.find(newData, { id: newObj.id })\r\n      );\r\n      newData.splice(index, 1, newObj)\r\n      dispatch(editWorkouts(newData));\r\n    } else {\r\n      newObj.id = newData[newData.length-1].id + 1;\r\n      newData.push(newObj);\r\n      dispatch(addNewWorkout(newObj));\r\n    }\r\n    setAddFormIsOpen(false);\r\n    setEditFormIsOpen(false);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"WorkoutType\",\r\n      dataIndex: \"workoutType\",\r\n      key: \"workoutType\",\r\n      filters: [\r\n        {\r\n          text: \"Bicycling\",\r\n          value: \"bicycling\",\r\n        },\r\n        {\r\n          text: \"Running\",\r\n          value: \"running\",\r\n        },\r\n        {\r\n          text: \"Walking\",\r\n          value: \"walking\",\r\n        },\r\n        {\r\n          text: \"Skiing\",\r\n          value: \"skiing\",\r\n        },\r\n      ],\r\n      onFilter: (value, record) => record.workoutType.indexOf(value) === 0,\r\n    },\r\n    {\r\n      title: \"Distance\",\r\n      dataIndex: \"distance\",\r\n      key: \"distance\",\r\n      render: (distance) => <>{distance} km.</>,\r\n      sorter: (a, b) => a.distance - b.distance,\r\n    },\r\n    {\r\n      title: \"Date\",\r\n      dataIndex: \"date\",\r\n      key: \"date\",\r\n      sorter: (a, b) => Date.parse(a.date) - Date.parse(b.date),\r\n    },\r\n    {\r\n      title: \"Comment\",\r\n      dataIndex: \"comment\",\r\n      key: \"comment\",\r\n    },\r\n    {\r\n      title: \"Actions\",\r\n      dataIndex: \"actions\",\r\n      render: (text, row) => {\r\n        return (\r\n          <ButtonGroup>\r\n            <Button onClick={() => setEditFormIsOpen(true)} type=\"primary\">\r\n              Edit\r\n            </Button>\r\n            <Popconfirm\r\n              title=\"Sure to delete?\"\r\n              onConfirm={() => handleDelete(row.id)}\r\n            >\r\n              <Button type=\"danger\">Delete</Button>\r\n            </Popconfirm>\r\n          </ButtonGroup>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        onClick={handleAdd}\r\n        type=\"primary\"\r\n        style={{\r\n          marginBottom: 16,\r\n        }}\r\n      >\r\n        Add a row\r\n      </Button>\r\n      <Table\r\n        dataSource={data}\r\n        columns={columns}\r\n        rowKey=\"id\"\r\n        pagination={{ pageSize: 4 }}\r\n        onRow={(record, rowIndex) => {\r\n          return {\r\n            onClick: (event) => setFormData({ ...record }),\r\n          };\r\n        }}\r\n      />\r\n      <ModalForm\r\n        title=\"Edit workout session\"\r\n        isOpen={editFormIsOpen}\r\n        handleOk={handleOk}\r\n        handleCancel={() => setEditFormIsOpen(false)}\r\n        data={formData}\r\n        values={formData}\r\n      />\r\n      <ModalForm\r\n        title=\"Add workout session\"\r\n        isOpen={addFormIsOpen}\r\n        handleOk={handleOk}\r\n        handleCancel={() => setAddFormIsOpen(false)}\r\n        values={emptyFormData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrainingTable;\r\n","import { GET_WORKOUT_DATA, DELETE_WORKOUT_BY_ID, ADD_NEW_WORKOUT, EDIT_WORKOUTS } from \"./actionTypes\";\r\n\r\n// export const getPlaces = () => {\r\n//   return (dispatch) => {\r\n//     dispatch(getPlacesStarted());\r\n\r\n//     const {\r\n//       user: { pk },\r\n//     } = JSON.parse(localStorage.getItem(\"User data\"));\r\n\r\n//     api\r\n//       .GET(`places/?format=json&owner=${pk}`)\r\n//       .then((res) => {\r\n//         dispatch(getPlacesSuccess(res.data));\r\n//       })\r\n//       .catch((err) => {\r\n//         dispatch(getPlacesFailure(err.message));\r\n//       });\r\n//   };\r\n// };\r\n\r\nconst deleteWorkoutById = (id) => ({\r\n  type: DELETE_WORKOUT_BY_ID,\r\n  payload: id ,\r\n});\r\n\r\nconst addNewWorkout = (newWorkout) => ({\r\n  type: ADD_NEW_WORKOUT,\r\n  payload: newWorkout,\r\n});\r\n\r\nconst editWorkouts = (newWorkouts) => ({\r\n  type: EDIT_WORKOUTS,\r\n  payload: newWorkouts,\r\n});\r\n\r\nconst getWorkoutData = () => ({\r\n  type: GET_WORKOUT_DATA,\r\n});\r\n\r\nexport { deleteWorkoutById, addNewWorkout, editWorkouts };\r\n","import React from \"react\";\r\nimport { Line } from '@ant-design/charts';\r\n\r\nconst Chart = ({data}) => {\r\n  const config = {\r\n    data,\r\n    height: 230,\r\n    xField: 'date',\r\n    yField: 'distance',\r\n    point: {\r\n      size: 5,\r\n      shape: 'diamond',\r\n    },\r\n    label: {\r\n      style: {\r\n        fill: '#aaa',\r\n      },\r\n    },\r\n  };\r\n  return <Line {...config} />;\r\n};\r\n\r\nexport default Chart;","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { Col, Row, Divider } from \"antd\";\n\nimport TrainingTable from \"./components/trainingTable/trainingTable\";\nimport Chart from \"./components/chart/chart\";\n\nfunction App() {\n  const data = useSelector(state => state.workouts)\n\n  return (\n    <>\n      <Divider orientation=\"left\">Distance chart</Divider>\n      <Row>\n        <Col span={14} offset={5}>\n          <Chart data={data}/>\n        </Col>\n      </Row>\n      <Divider orientation=\"left\">Workout table</Divider>\n      <Row>\n        <Col span={18} offset={3}>\n          <TrainingTable data={data}/>\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\n\nimport \"./index.css\";\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}